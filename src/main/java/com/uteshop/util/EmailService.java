package com.uteshop.util;

import com.uteshop.entity.order.OrderItems;
import com.uteshop.entity.order.Orders;
import com.uteshop.enums.PaymentEnums;
import com.uteshop.services.impl.manager.OrdersManagerServiceImpl;
import jakarta.mail.*;
import jakarta.mail.internet.InternetAddress;
import jakarta.mail.internet.MimeMessage;

import java.io.IOException;
import java.io.InputStream;
import java.math.BigDecimal;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.Properties;
import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class EmailService {

    private static final Properties emailConfig = loadEmailConfig();
    private static final ExecutorService emailExecutor = Executors.newFixedThreadPool(3);

    /**
     * Load c·∫•u h√¨nh email t·ª´ config.properties
     */
    private static Properties loadEmailConfig() {
        Properties props = new Properties();
        try (InputStream input = EmailService.class.getClassLoader().getResourceAsStream("config.properties")) {
            if (input != null) {
                props.load(input);
            }
        } catch (IOException e) {
            System.err.println("Cannot load email config: " + e.getMessage());
        }
        return props;
    }

    private static String vnd(BigDecimal n) {
        if (n == null) n = BigDecimal.ZERO;
        NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("vi", "VN"));
        return nf.format(n);
    }

    private static String getFromEmail() {
        return emailConfig.getProperty("smtp.from.email", "your-email@gmail.com");
    }

    private static String getPassword() {
        return emailConfig.getProperty("smtp.from.password", "your-app-password");
    }

    private static String getSmtpHost() {
        return emailConfig.getProperty("smtp.host", "smtp.gmail.com");
    }

    private static String getSmtpPort() {
        return emailConfig.getProperty("smtp.port", "587");
    }

    private static String getFromName() {
        return emailConfig.getProperty("smtp.from.name", "UTEShop");
    }

    // G·ª≠i OTP qua email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
    public static boolean sendOTP(String toEmail, String otp) {
        String subject = "M√£ OTP ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u - UTEShop";
        String htmlContent = buildOTPEmailTemplate(otp);

        return sendEmail(toEmail, subject, htmlContent);
    }

    // G·ª≠i OTP ƒëƒÉng k√Ω t√†i kho·∫£n
    public static boolean sendRegistrationOTP(String toEmail, String otp) {
        String subject = "M√£ OTP x√°c th·ª±c ƒëƒÉng k√Ω - UTEShop";
        String htmlContent = buildRegistrationOTPTemplate(otp);

        return sendEmail(toEmail, subject, htmlContent);
    }

    // G·ª≠i email x√°c nh·∫≠n ƒë∆°n h√†ng
    public static void sendOrderConfirmation(Integer orderId, Integer branchId) {
        OrdersManagerServiceImpl ordersManagerService = new OrdersManagerServiceImpl();
        Orders order = ordersManagerService.findByIdWithItems(orderId, branchId);

        String toEmail = order.getUser().getEmail();
        String orderCode = order.getId().toString();
        String customerName = order.getReceiverName();
        String paymentMethod = PaymentEnums.Method.label(order.getPayment().getMethod());
        String address = order.getAddressLine() + " " +
                order.getDistrict() + " " +
                order.getWard() + " " +
                order.getCity();
        String orderDate = order.getCreatedAt().toString();
        String subTotal = vnd(order.getSubtotal());
        String discountAmount = "-" + vnd(order.getDiscountAmount());
        String totalAmount = vnd(order.getTotalAmount());
        String orderDetailHtml = "";
        for (OrderItems oi : order.getItems()) {
            orderDetailHtml += "<tr>";
            orderDetailHtml += "<td>" + oi.getVariant().getSKU() + "</td>";
            orderDetailHtml += "<td>" + oi.getQuantity() + "</td>";
            orderDetailHtml += "<td>" + vnd(oi.getPrice()) + "</td>";
            orderDetailHtml += "<td>" + vnd(oi.getPrice().multiply(BigDecimal.valueOf(oi.getQuantity()))) + "</td>";
            orderDetailHtml += "</tr>";
        }

        String subject = "X√°c nh·∫≠n ƒë∆°n h√†ng #" + orderCode + " - UTEShop";

        String htmlContent = buildOrderConfirmationTemplate(
                customerName,
                orderCode,
                paymentMethod,
                address,
                orderDate,
                subTotal,
                discountAmount,
                totalAmount,
                orderDetailHtml
        );

        sendEmailAsync(toEmail, subject, htmlContent);
    }

    // T·∫°o m√£ OTP ng·∫´u nhi√™n 6 ch·ªØ s·ªë
    public static String generateOTP() {
        Random random = new Random();
        int otp = 100000 + random.nextInt(900000);
        return String.valueOf(otp);
    }

    // G·ª≠i email
    private static boolean sendEmail(String toEmail, String subject, String htmlContent) {
        try {
            // 1. C·∫•u h√¨nh SMTP
            Properties props = new Properties();
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.starttls.enable", "true");
            props.put("mail.smtp.host", getSmtpHost());
            props.put("mail.smtp.port", getSmtpPort());
            props.put("mail.smtp.ssl.protocols", "TLSv1.2");

            // 2. T·∫°o session
            Session session = Session.getInstance(props, new Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(getFromEmail(), getPassword());
                }
            });

            // 3. T·∫°o message
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(getFromEmail(), getFromName()));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(toEmail));
            message.setSubject(subject);
            message.setContent(htmlContent, "text/html; charset=UTF-8");

            // 4. G·ª≠i email
            Transport.send(message);
            System.out.println("Email sent successfully to: " + toEmail);
            return true;

        } catch (Exception e) {
            System.err.println("Failed to send email: " + e.getMessage());
            e.printStackTrace();
            return false;
        }
    }

    public static void sendEmailAsync(String toEmail, String subject, String htmlContent) {
        emailExecutor.submit(() -> {
            try {
                sendEmail(toEmail, subject, htmlContent);
            } catch (Exception e) {
                System.err.println("[Async Email] L·ªói g·ª≠i email t·ªõi " + toEmail + ": " + e.getMessage());
                e.printStackTrace();
            }
        });
    }

    // M·∫´u email OTP
    private static String buildOTPEmailTemplate(String otp) {
        return """
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset="UTF-8">
                    <style>
                        body { font-family: Arial, sans-serif; background-color: #f4f4f4; }
                        .container { max-width: 600px; margin: 20px auto; background: white; padding: 30px; border-radius: 10px; }
                        .header { text-align: center; color: #333; }
                        .otp-box { background: #f0f0f0; padding: 20px; text-align: center; margin: 20px 0; border-radius: 5px; }
                        .otp-code { font-size: 32px; font-weight: bold; color: #e91e63; letter-spacing: 5px; }
                        .footer { color: #666; font-size: 12px; text-align: center; margin-top: 20px; }
                    </style>
                </head>
                <body>
                    <div class="container">
                        <h2 class="header">üîê ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u UTEShop</h2>
                        <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n.</p>
                        <p>Vui l√≤ng s·ª≠ d·ª•ng m√£ x√°c th·ª±c b√™n d∆∞·ªõi:</p>

                        <div class="otp-box">
                            <div class="otp-code">%s</div>
                        </div>

                        <p><strong>L∆∞u √Ω:</strong></p>
                        <ul>
                            <li>M√£ c√≥ hi·ªáu l·ª±c trong <strong>5 ph√∫t</strong></li>
                            <li>Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                            <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu, vui l√≤ng b·ªè qua email n√†y</li>
                        </ul>

                        <div class="footer">
                            <p>Email t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng UTEShop</p>
                            <p>&copy; 2025 UTEShop. All rights reserved.</p>
                        </div>
                    </div>
                </body>
                </html>
                """
                .formatted(otp);
    }

    // M·∫´u email OTP ƒëƒÉng k√Ω t√†i kho·∫£n
    private static String buildRegistrationOTPTemplate(String otp) {
        return """
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset="UTF-8">
                    <style>
                        body { font-family: Arial, sans-serif; background-color: #f4f4f4; }
                        .container { max-width: 600px; margin: 20px auto; background: white; padding: 30px; border-radius: 10px; }
                        .header { text-align: center; color: #333; }
                        .otp-box { background: #f0f0f0; padding: 20px; text-align: center; margin: 20px 0; border-radius: 5px; }
                        .otp-code { font-size: 32px; font-weight: bold; color: #4CAF50; letter-spacing: 5px; }
                        .footer { color: #666; font-size: 12px; text-align: center; margin-top: 20px; }
                    </style>
                </head>
                <body>
                    <div class="container">
                        <h2 class="header">üéâ Ch√†o m·ª´ng ƒë·∫øn v·ªõi UTEShop</h2>
                        <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i UTEShop!</p>
                        <p>Vui l√≤ng s·ª≠ d·ª•ng m√£ x√°c th·ª±c b√™n d∆∞·ªõi ƒë·ªÉ ho√†n t·∫•t ƒëƒÉng k√Ω:</p>

                        <div class="otp-box">
                            <div class="otp-code">%s</div>
                        </div>

                        <p><strong>L∆∞u √Ω:</strong></p>
                        <ul>
                            <li>M√£ c√≥ hi·ªáu l·ª±c trong <strong>5 ph√∫t</strong></li>
                            <li>Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                            <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu, vui l√≤ng b·ªè qua email n√†y</li>
                        </ul>

                        <div class="footer">
                            <p>Email t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng UTEShop</p>
                            <p>&copy; 2025 UTEShop. All rights reserved.</p>
                        </div>
                    </div>
                </body>
                </html>
                """
                .formatted(otp);
    }

    private static String buildOrderConfirmationTemplate(String customerName,
                                                         String orderCode,
                                                         String paymentMethod,
                                                         String address,
                                                         String orderDate,
                                                         String subTotal,
                                                         String discountAmount,
                                                         String totalAmount,
                                                         String orderDetailHtml) {

        return """
            <!DOCTYPE html>
            <html lang="vi">
            <head>
                <meta charset="UTF-8">
                <style>
                    body { font-family: Arial, sans-serif; background-color: #f6f6f6; margin: 0; padding: 0; }
                    .container { max-width: 650px; margin: 30px auto; background: white; padding: 30px; border-radius: 10px; }
                    h2 { color: #2E7D32; text-align: center; }
                    table { width: 100%%; border-collapse: collapse; margin-top: 20px; }
                    th, td { border-bottom: 1px solid #ddd; padding: 10px; text-align: left; }
                    th { background-color: #f0f0f0; }
                    .lineTotal { font-size: 18px; font-weight: bold; color: #0a3df2; text-align: right; }
                    .total { font-size: 18px; font-weight: bold; color: #2E7D32; text-align: right; }
                    .discount { font-size: 18px; font-weight: bold; color: #E91E63; text-align: right; }
                    .info { margin-top: 20px; line-height: 1.6; }
                    .footer { font-size: 12px; color: #777; text-align: center; margin-top: 30px; }
                    .highlight { color: #2196F3; font-weight: bold; }
                </style>
            </head>
            <body>
                <div class="container">
                    <h2>C·∫£m ∆°n %s ƒë√£ ƒë·∫∑t h√†ng t·∫°i UTEShop!</h2>
                    <p>Xin ch√†o <strong>%s</strong>,</p>
                    <p>Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c ƒë∆°n h√†ng c·ªßa b·∫°n. Th√¥ng tin chi ti·∫øt nh∆∞ sau:</p>

                    <div class="info">
                        <p><strong>M√£ ƒë∆°n h√†ng:</strong> <span class="highlight">%s</span></p>
                        <p><strong>Ng√†y ƒë·∫∑t:</strong> %s</p>
                        <p><strong>Ph∆∞∆°ng th·ª©c thanh to√°n:</strong> %s</p>
                        <p><strong>ƒê·ªãa ch·ªâ giao h√†ng:</strong> %s</p>
                    </div>

                    <table>
                        <thead>
                            <tr>
                                <th>S·∫£n ph·∫©m</th>
                                <th>S·ªë l∆∞·ª£ng</th>
                                <th>ƒê∆°n gi√°</th>
                                <th>Th√†nh ti·ªÅn</th>
                            </tr>
                        </thead>
                        <tbody>
                            %s
                        </tbody>
                    </table>

                    <p class="lineTotal">T·∫°m t√≠nh: %s</p>
                    <p class="discount">Gi·∫£m gi√°: %s</p>
                    <p class="total">T·ªïng ti·ªÅn: %s</p>

                    <p style="margin-top:20px;">ƒê∆°n h√†ng c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c x·ª≠ l√Ω v√† giao trong th·ªùi gian s·ªõm nh·∫•t.</p>
                    <p>N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, vui l√≤ng li√™n h·ªá b·ªô ph·∫≠n chƒÉm s√≥c kh√°ch h√†ng c·ªßa UTEShop.</p>

                    <div class="footer">
                        <p>Email t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng UTEShop</p>
                        <p>&copy; 2025 UTEShop. All rights reserved.</p>
                    </div>
                </div>
            </body>
            </html>
            """.formatted(customerName,
                customerName,
                orderCode,
                orderDate,
                paymentMethod,
                address,
                orderDetailHtml,
                subTotal,
                discountAmount,
                totalAmount);
    }

}
